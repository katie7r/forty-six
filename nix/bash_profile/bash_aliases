# add handy aliases for ls
if [ -x /usr/bin/dircolors ]; then
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -1A'
alias l='ls -CF'

# some cds & moar lists
alias ..='cd ..'
alias .='ls -A'
# cd into dotfiles directory
alias 46='code \&c/46' # work mac, at least
# you're so vain / you probably think this cd is about you
alias mine='code \&c' # work mac, at least
# cd into whatever code directory is specified as my recent focus
alias focus='cd "$RECENT_FOCUS"'

# tmp? tiny-care-terminal
alias tct='source ~/Code/tiny-care-terminal/config.env && tiny-care-terminal'

# grep but with color!
alias grep='grep --color=always'
alias grepp='grep -nri' # my std flags
alias ungrep='grep -v'
# alias @@='grep --exclude=\*.min.\*'
alias @@='grep --exclude=\*.{min.\*,pyc} --exclude=\*/coverage/'
alias @@@='@@ --exclude=\*/{css,plugins,log,logs}/\*'
# alias @='@@ --exclude=\*/{css,js}/\* -nri'
# alias @='@@ --exclude=\*/{css,plugins}/\* -nri'
alias @='@@@ -nri'

# Open in Chrome
alias chrome='open -a "Google Chrome"'
# Open in Firefox
alias firefox='open -a "Firefox"'
# Open in Safari
alias safari='open -a "Safari"'

# open file in VS Code, since I aliased `code` before using VS Code and its
# included `code` command (and can never remember if it's `vs` or `vscode`)
alias vscode='open -a "Visual Studio Code"'
alias vs='vscode'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Virtalenv(wrapper)
alias v='workon'
alias v.mk='mkvirtualenv'
alias v.ex='deactivate'
alias v.ls='lsvirtualenv'

alias dirtree='tree -v --charset utf-8'

# bin/rails for local commands
alias .rails='bin/rails'
# alias .r='.rails'

alias cop='rubocop | grep -i ${1}'

# alias bk='black ${1:"."} -S --exclude="migrations"'
alias bk='black ${1:"."} --exclude="migrations"'

# Pivotal Tracker quick-launch script
alias tracker='~/Code/cuttlesoft/tracker/tracker.sh'

# ngrok without needing to cd to it
alias ngrok='~/Code/xtra/ngrok'

# Delete all Python migration files in project
alias rm-migrations='find . -path "*/migrations/*.py*" -not -name "__init__.py" -delete'

# FUNCTIONS

# cd into ~/Code/ with optional arg for further delving
code ()
{
  # TODO tab/autocomplete for dirs?
  cd ~/Code/"${1}"
}

# shortcut my preferred grep flags, plus switch arg order (dir before pattern),
# e.g., for multiple searches in the same place quickly/easily
grepper ()
{
  # # wildcard with grep
  # if [[ $1 == *"*"* ]]
  # then
  #   $GREPPATH="--include=\"$1\" ."
  # else
  #   $GREPPATH="$1"
  # fi

  # p.s. grepper is one final "g" away from being a palindrome, which is fun.
  grepp "$2" "$1"
}

# find the processes running on the specified port
portcullis ()
{
  lsof -i tcp:"$1"
}

# bower: uninstall package, clear cache, and reinstall package (with pkg name
# or a URL/local filepath), e.g., $ bower-reinstall local-package /path/to/pkg
bower-reinstall ()
{
  bower uninstall "$1" && bower cache clean && bower install "${2:-$1}"
}

# NOTE moving to bash script git alias
# # git: rebase to root, squashing all commits to a single one
# # with the message given by the user, e.g., $ git-reboot "Starting fresh"
# git-reboot ()
# {
#   git reset $(git commit-tree HEAD^{tree} -m "$1")
# }

fenestrate ()
{
  # TODO skip if already running
  cd ~/Code/\&c/fenestrate/ && http-server &

  # TODO ! supply args to query params for url (and url var for reuse) for framed to use
  # TODO ~ more dynamic browser choice

  if [ $# -eq 0 ]
  then
    chrome "http://localhost:8080"
  elif [[ $1 = 'safari' ]]
  then
    safari "http://localhost:8080"
  elif [[ $1 = 'firefox' ]]
  then
    firefox "http://localhost:8080"
  else
    chrome "http://localhost:8080"
  fi
}

# Stop trying to run flake8 with the wrong version outside of a virtual env
alias flake8="echo \"If you meant to run flake8 outside of a virtual environment, use 'vlake8' instead.\""
alias vlake8="command flake8"
# flake8 ()
# {
#   # # if [ $# -eq 0 ]
#   # if [ "$1" = "--wild" ]
#   # then
#   #   flake8 "${@:2}"
#   # else
#   #   echo "Did you mean to run flake8 in a virtual environmment?"
#   #   echo "Outside of a virtual environment, pass '--wild' to run."
#   # fi

#   run_outside=false

#   if [ $# -eq 0 ]
#   then
#     echo "Did you mean to run flake8 in a virtual environmment?"
#     echo "Outside of a virtual environment, run with 'flake8 g' instead."
#   fi

#   while [ ! $# -eq 0 ]
#   do
#     case "$1" in
#       g)
#         run_outside=true
#         ;;
#     esac
#     shift
#   done

#   if [ "$run_outside" = true ]
#   then
#     flake8 "$@"
#   fi
# }

# if `.r` alias is called with `dev`, do the annoying db:env:set
# thing for development
.r ()
{
    if [[ $@ == "dev" ]]; then
        command bin/rails db:environment:set RAILS_ENV=development

    else
        command bin/rails "$@"
    fi
}

# iTerm scripts
# TODO if aliases are here, so too should be scripts
term ()
{
  cmd="osascript "

  if [ "$2" = "start" ]; then
    scpt="start"
  elif [ "$2" = "stop" ]; then
    # TODO stop processes? mojave forbids keystrokes
    scpt="stop"
  else
    scpt="setup"
  fi

  eval $cmd "~/Code/$1/term-${scpt}.scpt"
}

alias beterra="term beterra $1"
alias binja="term vector35 $1"
alias dropworks="term dropworks $1"
alias hak="term gnomishhat $1"
alias jombler="term ovad/-jombler $1"
alias vtlh="term zimmerman $1"

alias bs="RAILS_APP_DIR='/Users/katieruss/Code/beterra/debrief' .r s -p 3000"
